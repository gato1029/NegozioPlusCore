<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NegozioPlusCore.Recursos"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf">

    <!--  bariol_regular-webfont.TTF #Bariol Regular  -->
    <Style x:Key="FuenteBaseButton" TargetType="Button">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
    </Style>
    <Style x:Key="FuenteBaseTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
        <Setter Property="Foreground" Value="Black" />
    </Style>
    <Style x:Key="FuenteBaseBarraLateralMenu" TargetType="syncfusion:SfNavigationDrawer">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="Black" />
    </Style>
    <Style x:Key="FuenteBaseMenu" TargetType="Label">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="Black" />
    </Style>
    <Style x:Key="FuenteBaseDataGrid" TargetType="syncfusion:SfDataGrid">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>
    <Style x:Key="FuenteBaseTextInput" TargetType="syncfusion:SfTextInputLayout">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FocusedBorderBrush" Value="#78A2D2" />
        <Setter Property="FocusedForeground" Value="#78A2D2" />
    </Style>
    <Style x:Key="FuenteBaseListCheckBox" TargetType="syncfusion:CheckListBox">
        <Setter Property="FontFamily" Value="/Recursos/Fuentes/Fenix-Regular.TTF #Fenix" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="FuenteBaseSfBusyIndicatorNormal" TargetType="syncfusion:SfBusyIndicator">
        <Setter Property="AnimationType" Value="Flower" />

    </Style>

    <!--#region TextBlock-->
    <Style
        x:Key="NormalTextBlock"
        BasedOn="{StaticResource FuenteBaseTextBlock}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="15" />
    </Style>
    <!--#endregion-->

    <!--#region ListCheckBox-->
    <Style
        x:Key="NormalListCheckBox"
        BasedOn="{StaticResource FuenteBaseListCheckBox}"
        TargetType="syncfusion:CheckListBox" />
    <!--#endregion-->
    <!--#region TextoInput-->
    <Style
        x:Key="BuscarTextInput"
        BasedOn="{StaticResource FuenteBaseTextInput}"
        TargetType="syncfusion:SfTextInputLayout" />
    <Style
        x:Key="NormalTextInput"
        BasedOn="{StaticResource FuenteBaseTextInput}"
        TargetType="syncfusion:SfTextInputLayout">
        <Setter Property="ContainerBackground" Value="White" />
        <Setter Property="OutlineCornerRadius" Value="10" />
    </Style>
    <!--#endregion-->

    <!--#region BotonImagen-->
    <Style
        x:Key="BotonImagen"
        BasedOn="{StaticResource FuenteBaseButton}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BotonImagenEfecto" TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="20"
                            Opacity="1"
                            ShadowDepth="0"
                            Color="Blue" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    <!--#region Fondos-->
    <Style x:Key="BorderFondoDegradoColor" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#38AE86" />
                    <GradientStop Color="#306B6C" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#38AE86" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderFondoDegradoBlanco" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#EFF5F5" />
                    <GradientStop Color="#EFF5F5" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#EFF5F6" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderFondoBase" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#FFFFFD" />
                    <GradientStop Color="#FFFFFD" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

    </Style>
    <!--#endregion-->
    <!--#region ItemsMenu-->
    <Style x:Key="SFItemStyle" TargetType="syncfusion:NavigationItem">
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image
                        Width="25"
                        Height="25"
                        Source="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Icon" Value="{Binding Icon}" />
        <Setter Property="DisplayMemberPath" Value="Item" />
        <Setter Property="ItemsSource" Value="{Binding SubItems}" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Background" Value="Transparent" />

    </Style>
    <!--#endregion-->
    <!--#region DataGrid-->
    <Style
        x:Key="DataGrid"
        BasedOn="{StaticResource FuenteBaseDataGrid}"
        TargetType="syncfusion:SfDataGrid" />
    <Style TargetType="syncfusion:GridRowHeaderCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="syncfusion:GridRowHeaderCell">
                    <Border
                        x:Name="PART_RowHeaderCellBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="{Binding RowIndex, RelativeSource={RelativeSource TemplatedParent}}"
                                TextAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region BotonesGlobales-->
    <Style
        x:Key="ImgBotonMaximizar"
        BasedOn="{StaticResource BotonImagenEfecto}"
        TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/max.png" />
    </Style>
    <Style
        x:Key="ImgBotonMinimizar"
        BasedOn="{StaticResource BotonImagenEfecto}"
        TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/mini.png" />
    </Style>
    <Style
        x:Key="ImgBotonCerrar"
        BasedOn="{StaticResource BotonImagenEfecto}"
        TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/cerrar.png" />
    </Style>
    <Style
        x:Key="ImgBotonAgregar"
        BasedOn="{StaticResource BotonImagenEfecto}"
        TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/agregar.png" />
    </Style>
    <Style
        x:Key="ImgBotonModificar"
        BasedOn="{StaticResource BotonImagenEfecto}"
        TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/editar.png" />
    </Style>
    <Style
        x:Key="ImgBotonEliminar"
        BasedOn="{StaticResource BotonImagenEfecto}"
        TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/delete.png" />
    </Style>
    <!--#endregion-->
    <!--#region ImagenesGlobales-->
    <Style x:Key="ImgIconoEmpresa" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/max.png" />
    </Style>
    <Style x:Key="ImgHome" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/home.png" />
    </Style>
    <Style x:Key="ImgUsuarios" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/users.png" />
    </Style>
    <Style x:Key="ImgAlmacen" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/almacen.png" />
    </Style>
    <Style x:Key="ImgProductos" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/productos.png" />
    </Style>
    <Style x:Key="ImgTiendas" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/tiendas.png" />
    </Style>
    <Style x:Key="ImgCerrarSesion" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/home.png" />
    </Style>
    <Style x:Key="ImgBuscar" TargetType="Image">
        <Setter Property="Source" Value="/Recursos/Imagenes/buscar.png" />
    </Style>
    <!--#endregion-->
    <!--#region BarraLateralMenuEstilo-->
    <Style
        x:Key="BarraLateralMenu"
        BasedOn="{StaticResource FuenteBaseBarraLateralMenu}"
        TargetType="syncfusion:SfNavigationDrawer" />
    <!--#endregion-->
    <!--#region MenuPrueba-->
    <Style x:Key="MenuButtonStyle" TargetType="RadioButton">

        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,3,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Grid Margin="0,0,0,0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180" />

                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="5" />

                        <Image
                            x:Name="SidebarRadioButtonMenuIcon"
                            Grid.Row="0"
                            Width="30"
                            Margin="15,0,0,0"
                            HorizontalAlignment="Left"
                            Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="None" />

                        <TextBlock
                            x:Name="SidebarRadioButtonMenuText"
                            Grid.Row="1"
                            Width="120"
                            Margin="60,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontFamily="Fonts/Roboto-Regular.ttf #Roboto Regular"
                            FontSize="18"
                            Foreground="#F8F9FA"
                            Text="{TemplateBinding Property=Content}" />

                        <Border
                            x:Name="Highlighter"
                            Width="4"
                            Height="20"
                            Margin="0,0,5,0"
                            HorizontalAlignment="Left"
                            Background="#00AADA"
                            CornerRadius="2"
                            Visibility="Collapsed" />

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="border" Property="Background" Value="#414141" />

                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">

                            <Setter TargetName="border" Property="Background" Value="#414141" />


                            <Setter TargetName="Highlighter" Property="Visibility" Value="Visible" />

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style x:Key="chkBullet" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#888" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border
                        Width="130"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                        <Grid>
                            <Border
                                x:Name="border"
                                Width="25"
                                Height="25"
                                Margin="1,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="White"
                                CornerRadius="9">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" />
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock
                                x:Name="txt"
                                Margin="9,0"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{TemplateBinding Content}">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform X="18" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="txt" Property="Text" Value="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" Value="#38AE86" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="100"
                                            Duration="00:00:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="txt"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="0"
                                            Duration="00:00:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="0"
                                            Duration="00:00:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="txt"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="18"
                                            Duration="00:00:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="PaleVioletRed" />
                            <Setter TargetName="txt" Property="Text" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxAdmin" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#888" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border
                        Width="130"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                        <Grid>
                            <Border
                                x:Name="border"
                                Width="25"
                                Height="25"
                                Margin="1,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="White"
                                CornerRadius="9">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" />
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock
                                x:Name="txt"
                                Margin="9,0"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{TemplateBinding Content}">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform X="18" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="txt" Property="Text" Value="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" Value="BlueViolet" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="100"
                                            Duration="00:00:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="txt"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="0"
                                            Duration="00:00:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="0"
                                            Duration="00:00:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="txt"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="18"
                                            Duration="00:00:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="ForestGreen" />
                            <Setter TargetName="txt" Property="Text" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>